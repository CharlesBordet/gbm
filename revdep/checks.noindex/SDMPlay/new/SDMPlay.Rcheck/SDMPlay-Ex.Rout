
R version 4.0.0 (2020-04-24) -- "Arbor Day"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "SDMPlay"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('SDMPlay')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("SDMdata.quality")
> ### * SDMdata.quality
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SDMdata.quality
> ### Title: Evaluate dataset quality
> ### Aliases: SDMdata.quality
> 
> ### ** Examples
> 
> #Open SDMtab object example
> x <- system.file ("extdata","SDMdata1500.csv", package="SDMPlay")
> SDMdata <- read.table(x,header=TRUE, sep=";")
> 
> # Evaluate the dataset
> SDMPlay:::SDMdata.quality(data=SDMdata)
                                           NA.percent (%)
depth                                           0.5263158
seasurface_temperature_mean_1965_1974           0.0000000
seasurface_temperature_amplitude_1965_1974      3.6842105
seafloor_temperature_mean_1965_1974            35.7894737
seafloor_temperature_amplitude_1965_1974       35.7894737
seasurface_salinity_mean_1965_1974              3.6842105
seasurface_salinity_amplitude_1965_1974         3.6842105
seafloor_salinity_mean_1965_1974               35.7894737
seafloor_salinity_amplitude_1965_1974          35.7894737
chlorophyla_summer_mean_2002_2009               4.2105263
geomorphology                                   3.1578947
sediments                                       1.0526316
slope                                           0.0000000
seafloor_oxygen_mean_1955_2012                 50.0000000
roughness                                       0.5263158
> 
> 
> 
> cleanEx()
> nameEx("SDMeval")
> ### * SDMeval
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SDMeval
> ### Title: Evaluate species distribution models
> ### Aliases: SDMeval
> 
> ### ** Examples
> 
> # Model example
> load(system.file('extdata','model.RData',package='SDMPlay'))
> modelBRT <- model
> 
> # Evaluate modelling performance
> #SDMPlay:::SDMeval(modelBRT)
> 
> 
> 
> cleanEx()
> nameEx("SDMtab")
> ### * SDMtab
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SDMtab
> ### Title: Compile species distribution dataset for modelling
> ### Aliases: SDMtab
> 
> ### ** Examples
> 
> #Open occurrence data
> data('ctenocidaris.nutrix')
> occ <- ctenocidaris.nutrix
> 
> #Open environmental descriptors RasterStack
> r <- raster:: stack(system.file('extdata', 'pred.grd',package='SDMPlay'))
> 
> #create the dataframe for modelling
> z <- SDMPlay:::SDMtab(xydata=occ[,c('decimal.Longitude','decimal.Latitude')],predictors=r)
> head(z)
  id longitude latitude depth seasurface_temperature_mean_1965_1974
1  1     67.15   -48.95  -653                                     5
2  1     67.35   -49.45  -204                                     5
3  1     67.55   -49.05  -168                                     5
4  1     67.55   -48.15  -355                                     5
5  1     67.85   -49.45  -136                                     5
6  1     68.05   -49.05  -155                                     5
  seasurface_temperature_amplitude_1965_1974
1                                         -2
2                                         -2
3                                         -2
4                                         -2
5                                         -2
6                                         -2
  seafloor_temperature_mean_1965_1974 seafloor_temperature_amplitude_1965_1974
1                                  NA                                       NA
2                                  NA                                       NA
3                                   3                                       -1
4                                  NA                                       NA
5                                   2                                        0
6                                   3                                        0
  seasurface_salinity_mean_1965_1974 seasurface_salinity_amplitude_1965_1974
1                                 34                                       0
2                                 34                                       0
3                                 34                                       0
4                                 34                                       0
5                                 34                                       0
6                                 34                                       0
  seafloor_salinity_mean_1965_1974 seafloor_salinity_amplitude_1965_1974
1                               NA                                    NA
2                               NA                                    NA
3                               34                                     0
4                               NA                                    NA
5                               34                                     0
6                               34                                     0
  chlorophyla_summer_mean_2002_2009 geomorphology sediments slope
1                                 0            14         4     0
2                                 0            14         4     0
3                                 0             2         4     0
4                                 0            14         4     0
5                                 0            14         4     0
6                                 0             2         4     0
  seafloor_oxygen_mean_1955_2012 roughness
1                             NA       836
2                              5       651
3                              7       107
4                              5       160
5                              7        86
6                              7        45
> 
> 
> 
> 
> cleanEx()
> nameEx("brisaster.antarcticus")
> ### * brisaster.antarcticus
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: brisaster.antarcticus
> ### Title: Records of _Brisaster antarcticus_ echinoid presences on the
> ###   Kerguelen Plateau
> ### Aliases: brisaster.antarcticus
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(brisaster.antarcticus)
> x <- brisaster.antarcticus
> 
> # plot of the occurrences:
> # selecting the species according to the campaigns
> brisaster7475 <- subset(x,x$year==1974 | x$year==1975)
> brisaster20102015 <- subset(x,x$campaign=='POKER II'| x$campaign=='PROTEKER')
> 
> # drawing the background (depth)
> library(grDevices)
> blue.palette <- colorRampPalette(c('blue','deepskyblue','azure'))(100)
> data('predictors1965_1974')
> depth <- raster :: subset(predictors1965_1974, 1)
> 
> raster::plot(depth, col=blue.palette,main= "Brisaster antarcticus occurrences")
> 
> # adding the occurrence data to the background
> points(brisaster7475[,c('decimal.Longitude','decimal.Latitude')],
+       col='orange',pch=16)
> points(brisaster20102015[,c('decimal.Longitude','decimal.Latitude')],
+       col='darkgreen',pch=16)
> legend('bottomleft',
+        legend=c('Brisaster antarcticus 1974-1975','Brisaster antarcticus 2010-2015'),
+        col= c('orange','darkgreen'), pch= c(15, 15),cex=0.9)
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("compute.brt")
> ### * compute.brt
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compute.brt
> ### Title: Compute BRT (Boosted Regression Trees) model
> ### Aliases: compute.brt
> 
> ### ** Examples
> 
> ## Not run: 
> ##D #Download the presence data
> ##D data('ctenocidaris.nutrix')
> ##D occ <- ctenocidaris.nutrix
> ##D # select longitude and latitude coordinates among all the information
> ##D occ <- ctenocidaris.nutrix[,c('decimal.Longitude','decimal.Latitude')]
> ##D 
> ##D #Download an example of environmental predictors
> ##D #restricted on geographical extent and depth (-1500m)
> ##D envi <- raster::stack(system.file('extdata', 'pred.grd',package='SDMPlay'))
> ##D envi
> ##D 
> ##D #Open SDMtab matrix
> ##D x <- system.file(file='extdata/SDMdata1500.csv',package='SDMPlay')
> ##D SDMdata <- read.table(x,header=TRUE, sep=';')
> ##D 
> ##D #Run the model
> ##D model <- SDMPlay:::compute.brt (x=SDMdata, proj.predictors=envi,lr=0.0005)
> ##D 
> ##D #Plot the partial dependance plots
> ##D dismo::gbm.plot(model$response)
> ##D 
> ##D #Get the contribution of each variable for the model
> ##D model$response$contributions
> ##D 
> ##D #Get the interaction between variables
> ##D dismo::gbm.interactions(model$response)
> ##D #Plot the interactions
> ##D int <- dismo::gbm.interactions(model$response)
> ##D # choose the interaction to plot
> ##D dismo::gbm.perspec(model$response,int$rank.list[1,1],int$rank.list[1,3])
> ##D 
> ##D #Plot the map prediction
> ##D library(grDevices) # add nice colors
> ##D palet.col <- colorRampPalette(c('deepskyblue','green','yellow', 'red'))( 80 )
> ##D raster::plot(model$raster.prediction, col=palet.col)
> ##D #add data
> ##D points(occ, col='black',pch=16)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("compute.maxent")
> ### * compute.maxent
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compute.maxent
> ### Title: Compute MaxEnt model
> ### Aliases: compute.maxent
> 
> ### ** Examples
> 
> #Download the presence data
> data('ctenocidaris.nutrix')
> occ <- ctenocidaris.nutrix
> # select longitude and latitude coordinates among all the information
> occ <- ctenocidaris.nutrix[,c('decimal.Longitude','decimal.Latitude')]
> 
> #Download an example of environmental predictors
> #restricted on geographical extent and depth (-1500m)
> envi <- raster::stack(system.file('extdata', 'pred.grd',package='SDMPlay'))
> envi
class      : RasterStack 
dimensions : 100, 179, 17900, 15  (nrow, ncol, ncell, nlayers)
resolution : 0.1, 0.1  (x, y)
extent     : 63, 80.9, -56, -46  (xmin, xmax, ymin, ymax)
crs        : +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 
names      : depth, seasurfac//_1965_1974, seasurfac//_1965_1974, seafloor_//_1965_1974, seafloor_//_1965_1974, seasurfac//_1965_1974, seasurfac//_1965_1974, seafloor_//_1965_1974, seafloor_//_1965_1974, chlorophy//_2002_2009, geomorphology, sediments, slope, seafloor_//_1955_2012, roughness 
min values : -1500,                     3,                    -4,                     0,                    -3,                    34,                     0,                    34,                     0,                     0,             1,         2,     0,                     4,         7 
max values :    -1,                     8,                    -1,                     5,                     1,                    34,                     0,                    35,                     0,                     3,            19,        13,     0,                     8,      3417 

> 
> #Open SDMtab matrix
> x <- system.file(file='extdata/SDMdata1500.csv',package='SDMPlay')
> SDMdata <- read.table(x,header=TRUE, sep=';')
> 
> #only run if the maxent.jar file is available, in the right folder
> jar <- paste(system.file(package="dismo"), "/java/maxent.jar", sep='')
> # Check first if maxent can be run (normally not part of your script)
> # (file.exists(jar) & require(rJava)) == TRUE ??
> # rJava may pose a problem to load automatically within this package
> # please load it manually using eventually the archives available from CRAN
> 
> # Run the model
> #model <- SDMPlay:::compute.maxent(x=SDMdata , proj.predictors=envi)
> 
> # Plot the map prediction
> library(grDevices) # add nice colors
> #palet.col <- colorRampPalette(c('deepskyblue','green','yellow','red'))(80)
> #'raster::plot(model$raster.prediction, col=palet.col)
> # add data
> #points(occ, col='black',pch=16)
> 
> # Get the partial dependance curves
> #dismo::response(model$response)
> 
> # Get the percentage of contribution of each variable to the model
> #plot(model$response)
> 
> # Get all the information provided by the model on a html document
> #model$response
> 
> 
> 
> 
> cleanEx()
> nameEx("ctenocidaris.nutrix")
> ### * ctenocidaris.nutrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ctenocidaris.nutrix
> ### Title: Records of _Ctenocidaris nutrix_ echinoid presences on the
> ###   Kerguelen Plateau
> ### Aliases: ctenocidaris.nutrix
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(ctenocidaris.nutrix)
> x <- ctenocidaris.nutrix
> # plot of the occurrences:
> # selecting the species according to the campaigns
> ctenocidaris7475 <- base::subset(x,x$year==1974 | x$year==1975)
> ctenocidaris20102015 <- base::subset(x,x$campaign=='POKER II' | x$campaign=='PROTEKER')
> 
> # drawing the background (depth)
> library(grDevices)
> blue.palette <- colorRampPalette(c('blue','deepskyblue','azure'))(100)
> data('predictors1965_1974')
> depth <- raster :: subset(predictors1965_1974, 1)
> 
> raster::plot(depth, col=blue.palette,main= "Ctenocidaris nutrix occurrences")
> 
> # adding the occurrences data to the background
> points(ctenocidaris7475[,c('decimal.Longitude','decimal.Latitude')],
+       col='orange',pch=16)
> points(ctenocidaris20102015[,c('decimal.Longitude','decimal.Latitude')],
+       col='darkgreen',pch=16)
> legend('bottomleft',
+        legend=c('Ctenocidaris nutrix 1974-1975','Ctenocidaris nutrix 2010-2015'),
+        col= c('orange','darkgreen'), pch= c(15, 15),cex=0.9)
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("delim.area")
> ### * delim.area
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: delim.area
> ### Title: RasterStack preparation for modelling
> ### Aliases: delim.area
> 
> ### ** Examples
> 
> data('predictors2005_2012')
> envi <- predictors2005_2012
> 
> r <- SDMPlay:::delim.area(predictors = envi,
+ longmin = 70,longmax = 75, latmin = -50,latmax = -40,interval = c(0,-1000))
> r
class      : RasterStack 
dimensions : 40, 50, 2000, 15  (nrow, ncol, ncell, nlayers)
resolution : 0.1, 0.1  (x, y)
extent     : 70, 75, -50, -46  (xmin, xmax, ymin, ymax)
crs        : +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 
names      :         depth, seasurfac//_2005_2012, seasurfac//_2005_2012, seafloor_//_2005_2012, seafloor_//_2005_2012, seasurfac//_2005_2012, seasurfac//_2005_2012, seafloor_//_2005_2012, seafloor_//_2005_2012, chlorophy//_2005_2012, geomorphology,     sediments,         slope, seafloor_//_2005_2012,     roughness 
min values : -9.990000e+02,          3.036790e+00,         -3.519600e+00,          5.610100e-01,         -3.057705e+00,          3.364701e+01,          1.996613e-02,          3.366441e+01,         -8.618927e-02,          1.626107e-01,  2.000000e+00,  2.000000e+00,  1.996970e-04,          4.199665e+00,  2.500000e+01 
max values :   -5.00000000,            8.90549088,           -2.15551949,            4.88237000,            0.90080523,           33.90781021,            0.08208847,           34.78820038,            0.07081604,            2.73237777,   18.00000000,   13.00000000,    0.11396182,            7.53164577, 2668.00000000 

> 
> library(grDevices) # plot the result with nice colors
> palet.col <- colorRampPalette(c('deepskyblue','green','yellow', 'red'))(80)
> raster::plot(r, col=palet.col)
> 
> 
> 
> cleanEx()
> nameEx("null.model")
> ### * null.model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: null.model
> ### Title: Compute null model
> ### Aliases: null.model
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(dismo)
> ##D #Download the environmental predictors restricted on geographical extent and depth (-1500m)
> ##D envi <-raster::stack(system.file('extdata', 'pred.grd',package='SDMPlay'))
> ##D 
> ##D # Realize a null model type #2 with BRT
> ##D #--------------------------------------
> ##D # NB: the following arguments chosen for the example are not relevant,
> ##D # in the scope to minimize running time
> ##D modelN2 <- SDMPlay:::null.model(xy=NULL,predictors=envi,type=2,algorithm='brt',
> ##D                      nb=300,unique.data=TRUE, same=TRUE, nb.rep=2,lr=0.005)
> ##D 
> ##D # Look at the inputs used to implement the model
> ##D modelN2$input
> ##D 
> ##D # Get the evaluation of the models produced
> ##D modelN2$eval
> ##D 
> ##D # Get the evaluation of the mean of all these produced models (i.e. evaluation
> ##D # of the null model )
> ##D modelN2$eval.null
> ##D 
> ##D # Get the values of Spearman correlations between the all the prediction maps produced
> ##D modelN2$correlation
> ##D 
> ##D # Plot the mean null model map with nice colors
> ##D library(grDevices)
> ##D palet.col <- colorRampPalette(c('deepskyblue','green','yellow', 'red'))(80)
> ##D raster::plot(modelN2$pred.mean, col=palet.col)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("predictors1965_1974")
> ### * predictors1965_1974
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: predictors1965_1974
> ### Title: Environmental descriptors for 1965-1974 on the Kerguelen Plateau
> ### Aliases: predictors1965_1974
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(predictors1965_1974)
> raster::plot(predictors1965_1974)
> 
> 
> 
> 
> cleanEx()
> nameEx("predictors2005_2012")
> ### * predictors2005_2012
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: predictors2005_2012
> ### Title: Environmental descriptors for 2005-2012 on the Kerguelen Plateau
> ### Aliases: predictors2005_2012
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(predictors2005_2012)
> raster::plot(predictors2005_2012)
> 
> 
> 
> 
> cleanEx()
> nameEx("predictors2200AIB")
> ### * predictors2200AIB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: predictors2200AIB
> ### Title: IPCC environmental descriptors predicted for 2200 (AIB scenario)
> ###   on the Kerguelen Plateau
> ### Aliases: predictors2200AIB
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(predictors2200AIB)
> raster :: plot(predictors2200AIB)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  5.185 0.526 5.848 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
